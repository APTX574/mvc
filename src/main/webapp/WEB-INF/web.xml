<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">
    <!--在DispatcherServlet的init()方法中会执行读取web.xml配置文件的操作-->
    <!--并且会把获得的容器对象放置到ServletContext域中供以后使用-->
    <servlet>
        <servlet-name>springmvc</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>

        <!--springmvc创建对象的时候默认读取的文件是/WEB-INF/<servlet名字>-servlet.xml-->
        <!--可以自定义读取文件的位置-->
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <!--classpath代表类路径,应该为资源路径-->
            <param-value>classpath:spring.xml</param-value>
        </init-param>

        <!--表示在服务器启动后自动创建对象, 期中的数字代表创建对象的顺序, 数字越小越优先, 为大于等于0的整数-->
        <!--默认的话是不会加载就创建,而是等用户发起请求才创建对象-->
        <load-on-startup>1</load-on-startup>

    </servlet>

    <servlet-mapping>
        <servlet-name>springmvc</servlet-name>
        <!--在框架中可以使用两种方式写url-->
        <!--第一种是以扩展名的方式如, *.do, *.action *.mvc代表他们结尾的请求都又这个servlet处理-->
        <url-pattern>*.do</url-pattern>
    </servlet-mapping>
    <filter>
        <filter-name>characterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>utf-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceRequestEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <param-name>forceResponseEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>characterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
</web-app>